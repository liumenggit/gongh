<template>
    <tm-app>
        <tm-descriptions title="经纬度" :column="1" :label-width="100">
            <tm-descriptions-item label="经度" :value="useLocationStore().location.longitude as string"/>
            <tm-descriptions-item label="纬度" :value="useLocationStore().location.latitude as string"/>
        </tm-descriptions>
        <tm-descriptions title="地理位置" :column="1" :label-width="100">
            <tm-descriptions-item label="城市代码" :value="useLocationStore().location.address.adcode as string"/>
            <tm-descriptions-item label="城市" :value="useLocationStore().location.address.city"/>
            <tm-descriptions-item label="城市代码" :value="useLocationStore().location.address.city_code as string"/>
            <tm-descriptions-item label="区县" :value="useLocationStore().location.address.district"/>
            <tm-descriptions-item label="地理位置" :value="useLocationStore().location.address.name"/>
            <tm-descriptions-item label="国家" :value="useLocationStore().location.address.nation"/>
            <tm-descriptions-item label="国家代码" :value="useLocationStore().location.address.nation_code as string"/>
            <tm-descriptions-item label="电话区号"
                                  :value="useLocationStore().location.address.phone_area_code as string"/>
            <tm-descriptions-item label="省份" :value="useLocationStore().location.address.province"/>
            <tm-descriptions-item label="地址" :value="useLocationStore().location.address.address"/>
        </tm-descriptions>
        <map id="map" class="map" :show-location="true" :latitude="useLocationStore().location.latitude"
             :longitude="useLocationStore().location.longitude" :markers="markers"></map>
        <tm-descriptions-item v-for="lable in markers" :key="lable.id" :label="lable.title"
                              :value="useLocationStore().conversionDistance(lable.distance)"/>
    </tm-app>
</template>

<script setup lang="ts">

import {useLocationStore} from '@/state/modules/location';
import {ref} from 'vue';
import {onReady} from '@dcloudio/uni-app';


const markers = ref([{
    latitude: 49.21573,
    longitude: 119.76694,
    title: '2',
    id: 2,
    distance: 0
}, {
    latitude: 49.22573,
    longitude: 119.77694,
    title: '3',
    id: 3,
    distance: 0
}]);
onReady(() => {
    const mapContext = uni.createMapContext('map', this);
    useLocationStore().initialize().then(() => {
    }).catch(err => {
        console.log('初始化失败');
        useLocationStore().setDefaultLocation();
    }).finally(() => {
        console.log('finally');
        mapContext.includePoints({
            padding: [80, 80, 80, 80],
            points: [...markers.value, {
                longitude: useLocationStore().location.longitude,
                latitude: useLocationStore().location.latitude
            }],
            success: () => {
                console.log('includePoints', 'success');
            }, fail: (err) => {
                console.error('includePoints', err);
            }
        });
        useLocationStore().calculateDistance(markers.value).then(res => {
            console.log('距离', res);
            markers.value = useLocationStore().appendDistance(markers.value, res);
        }).catch(err => {
            console.log('计算距离错误', err);
        });
    });

});
</script>


<style scoped>
.map {
    width: 100vw;
    height: 50vw;
}
</style>
