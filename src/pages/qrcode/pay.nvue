<template>
  <!--    color="white" :linear-color="['#ea3c2d','#ff9d14']" linear="top" linear-deep="light"-->
    <tm-app>
        <tm-card :margin="[32,32,32,0]" :round="3">
            <template v-slot:title>
                <tm-text label="商家名称" color="decolor"/>
            </template>
            <template v-slot:content>
                <tm-text :label="businessPayInfo.business"/>
            </template>
        </tm-card>
        <tm-sheet :padding="[0,0]" :margin="[32,12,32,0]" :round="4" :shadow="2">
            <tm-input placeholder="请输入订单总金额" prefixLabel="订单总金额" prefix="tmicon-dollar" suffixLabel="元" type="number"
                      class="fulled" transprent/>
        </tm-sheet>

        <tm-cell :round="3" :margin="[32,12,32,0]"
                 :right-text="payParams.card_id?_.find(businessPayInfo.coupon_card, {id: payParams.card_id})?.title:'选择'"
                 :shadow="2" @click="couponShow = true">
            <template v-slot:title>
                <tm-text label="查看可用优惠券" color="decolor"/>
            </template>
        </tm-cell>
        <tm-cell :round="3" :margin="[32,12,32,0]" right-text="选择" :shadow="2">
            <template v-slot:title>
                <tm-text label="查看可用核销积分商品" color="decolor"/>
            </template>
        </tm-cell>
        <tm-card :margin="[32,12,32,0]" :round="3">
            <template v-slot:title>
                <view class="flex-row flex-row-center-start">
                    <tm-text label="可用余额" color="decolor" class="mr-20"/>
                    <!--                    <tm-text :label="businessPayInfo.db"/>-->
                    <tm-statistic :end-val="businessPayInfo.db" :decimals="2" suffix="元"/>
                    <!--                    <tm-statistic prefix="￥" :start-val="0" :end-val="20" :decimals="2"></tm-statistic>-->
                </view>
            </template>
            <template v-slot:content>
                <view class="flex-col flex-col-center-center flex-wrap fulled pa-20">
                    <tm-input placeholder="请输入付款金额" type="number" :fontSize="48" align="center" class="fulled"
                              :height="120"/>

                    <tm-text label="实际支付￥0.00" color="decolor" class="mt-40"/>
                </view>
            </template>
        </tm-card>
        <tm-button label="支付" block :margin="[32,32]"></tm-button>
        <tm-drawer @ok="payParams.card_id = null" hideCancel okText="不使用" ref="calendarView" placement="bottom"
                   v-model:show="couponShow" :height="800">
            <tm-scrolly :width="0">
                <tm-result v-if="businessPayInfo.coupon_card.length === 0" status="empty" :show-btn="false"></tm-result>
                <view class="mb-16"/>
                <tm-coupon v-for="couponItem in businessPayInfo.coupon_card" color="pink" linear="right"
                           linear-deep="accent" mainColor="yellow" font-color=""
                           :price-detail="{price:couponItem.price,subtext:'',prefix:'￥',suffix:''}"
                           :right-detail="{title:couponItem.title,subtitle:'副标题',time:couponItem.eff_range}"
                           @click="payParams.card_id = couponItem.id;couponShow = false"
                           extra
                           btn-label="立即使用"
                >
                    <template v-slot:extra>
                        <tm-text :font-size="22" _class="opacity-7" :label="couponItem.remark"></tm-text>
                    </template>
                </tm-coupon>
            </tm-scrolly>
        </tm-drawer>
    </tm-app>
</template>

<script setup lang="ts">
import {onLoad} from '@dcloudio/uni-app';
import {useRequest} from 'alova';
import {getBusinessInfo, getBusinessPayInfo} from '@/services/api/business';
import {useUserStore} from '@/state/modules/user';
import {Ref, ref} from 'vue';
import {useRouter} from '@/hooks/router';
import _ from 'lodash';

useUserStore().updateUserInfo();
const userInfo = useUserStore().$state;
const couponShow = ref(false);
const {
    loading,
    data: businessPayInfo,
    send
} = useRequest((id) => getBusinessPayInfo(id), {
    initialData: {},
    immediate: false,
});
const payParams: Ref<PayParams> = ref({
    card_id: null,
    business_id: null,
    db: null,
    integral_id: null
});

onLoad((option) => {
    option = {id: 2};
    payParams.value.business_id = option?.id;
    send(option?.id);
});
</script>

<style scoped>

</style>
