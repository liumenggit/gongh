<template>
    <tm-app>
        <tm-input @search="search" prefix="tmicon-search" searchLabel="搜索" :margin="[16,16]"></tm-input>
        <tm-side-menu :load="testLoad" v-model:active="active" :height="1400" :itemHeight="140" rangKey="title"
                      :list="shopCatList">
            <tm-sheet v-for="pageListItem in pageList" :key="pageListItem" border-direction="bottom"
                      :padding="[24,24]" :margin="[0]" :border="1" :width="0" :height="0">
                <tm-row :height="160" :width="0">
                    <tm-col :height="0" :col="4" align="start">
                        <tm-image :width="160" :height="150" :src="pageListItem.image" :round="4"/>
                    </tm-col>
                    <tm-col :height="150" :col="8" align="start" _class="flex-row-top-start flex-between">
                        <tm-text _class="text-overflow-2 text-align-left" :label="pageListItem.title"/>
                        <tm-text :label="pageListItem.mail" color="grey" class="text-lighten-1"/>
                    </tm-col>
                </tm-row>
            </tm-sheet>
        </tm-side-menu>
    </tm-app>
</template>

<script setup lang="ts">
import {computed, ref} from "vue";
import {useRequest} from "alova";
import {getShopCat} from "@/services/api/shop";
import TmSideMenu from "@/tmui/components/tm-side-menu/tm-side-menu.vue";
import {usePagination} from "@alova/scene-vue";
import {getPageList} from "@/services/api/page";

const {
    data: shopCatList,
} = useRequest(() => getShopCat(), {
    initialData: [],
    immediate: true,
});

const search = ref('')
const active = ref(0)

const testLoad = (e: any) => {
    console.log('test', e)
}

const {
    loading,
    data: pageList,
    isLastPage,
    pageSize: limit,
    page,
    reload,
    onSuccess
} = usePagination(
    (page: number, limit: number) =>
        getPageList({page, limit}),
    {
        watchingStates: [search],
        preloadPreviousPage: false,
        preloadNextPage: false,
        append: true,
        debounce: [500],
        data: (res) => res.list,
        initialPageSize: 10
    }
);

</script>

<style scoped>

</style>
