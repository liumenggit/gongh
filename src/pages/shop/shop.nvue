<template>
    <tm-app color="white">
        <tm-navbar title="" color="primary" hideHome :left-width="500">
            <template v-slot:left>
                <tm-input @search="search" v-model.lazy="searchLazy" searchLabel="搜索" placeholder="请输入商品名"
                          class="ml-20 fulled"/>
            </template>
        </tm-navbar>
        <td-carousel autoplay :margin="[0,0]" :round="0" :width="750" :height="300"
                     :list="shopInfo.carousel_list"/>
        <tm-grid :col="5" :width="750" transprent class="my-10">
            <tm-grid-item v-for="businessHyType in useSettingStore().businessHyTypeList"
                          @click="businessHyTypeActive=businessHyType.id">
                <tm-icon name="tmicon-heart-fill" :font-size="42"></tm-icon>
                <tm-text :label="businessHyType.name"
                         :color=" businessHyTypeActive === businessHyType.id?'red':'grey'"/>
            </tm-grid-item>
        </tm-grid>
        <td-carousel autoplay :margin="[0,0]" :width="750" :height="150"
                     :list="shopInfo.adv_list"/>
        <tm-scrolly v-model="pull" :round="3" @refresh="reload" :width="0" :height="getWindow().height * 2"
                    translate="yes" @bottom="()=>{if(!isLastPage) page++;}" :bottom-value="loading">
            <tm-result v-if="pageList.length === 0 && loading === false" status="empty" :show-btn="false"></tm-result>
            <view class="mt-20"></view>
            <tm-waterfall ref="wall" :width="686" class="mx-32">
                <tm-waterfall-item @click="useRouter().go('/pages/shop/shop-info?id=' + pageItem.id)"
                                   :img="pageItem.img" v-for="(pageItem,index) in pageList" :key="pageItem.id">
                    <view class="pt-12 pb-12 px-12">
                        <tm-text :label="pageItem.name" _class="text-overflow-2"></tm-text>
                        <view class="flex flex-row flex-row-bottom-start mt-24">
                            <tm-text color="orange" _class="px-10" :font-size="36" :label='pageItem.price'></tm-text>
                            <tm-text color="grey" :font-size="24" :label='pageItem.num'></tm-text>
                        </view>
                    </view>
                </tm-waterfall-item>
            </tm-waterfall>
            <tm-divider v-if="isLastPage" align="center" label="没有更多数据"/>
        </tm-scrolly>
    </tm-app>
</template>

<script setup lang="ts">

import {getCurrentInstance, ref} from 'vue';
import {onReady} from '@dcloudio/uni-app';
import {getWindow, torpx} from '@/tmui/tool/function/util';
import {usePagination} from '@alova/scene-vue';
import {getShopGoodsList} from '@/services/api/shop';
import {useSettingStore} from '@/state/modules/setting';
import tmWaterfall from '@/tmui/components/tm-waterfall/tm-waterfall.vue';
import {useRouter} from '@/hooks/router';
import TdText from '@/components/td-text/td-text.vue';

const wall = ref<InstanceType<typeof tmWaterfall> | null>(null);

const businessHyTypeActive = ref(useSettingStore().businessHyTypeList[0].id);

const shopInfo = ref({
    carousel_list: [],
    adv_list: []
});
const searchLazy = ref('');
let searchText = ref('');

const pull = ref(false);
const scrollHeight = ref(400);
const proxy = getCurrentInstance()?.proxy ?? null;
onReady(() => {
    const query = uni.createSelectorQuery().in(proxy);
    query.select('.hei').boundingClientRect((result: any) => {
        scrollHeight.value = torpx(getWindow().height - result.top);
    }).exec();
});

const {
    loading,
    data: pageList,
    isLastPage,
    pageSize: limit,
    page,
    reload,
    onSuccess
} = usePagination(
    (page: number, limit: number) =>
        getShopGoodsList({
            page,
            limit,
            type_id: businessHyTypeActive.value,
            keyword: searchText.value,
        }),
    {
        watchingStates: [businessHyTypeActive, searchText],
        preloadPreviousPage: false,
        preloadNextPage: false,
        debounce: [500],
        append: true,
        initialPageSize: 10,
        immediate: true,
        data: (res) => res.list
    }
);
onSuccess((data) => {
    wall.value?.clear();
    console.log('onSuccess', pageList.value);
    shopInfo.value = {carousel_list: data.data.carousel_list, adv_list: data.data.adv_list};
    pull.value = false;
});
const search = () => {
    searchText.value = searchLazy.value;
};
</script>

<style scoped>

</style>
